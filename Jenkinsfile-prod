pipeline {
         agent any
         environment{
            PROJECT_ID = 'adminpage-chicago'
             CREDENTIALS_ID = 'gke'
             CLUSTER_NAME = 'adminpage-chicago-k8s'
             LOCATION = 'us-east4-b'
             registry ="pavlohortovenko20/carrectlyweb:${env.BUILD_NUMBER}"
             registryCredential ='dockerhub_cred'
         }
         stages {
                 stage('Checout') {
                 steps {
                     checkout([$class: 'GitSCM', branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/carrectly/webpage.git']]])
                    }
                 } 
                 stage('Build Docker image') {
                 steps {
                     script {
                        sh 'echo CARRECTLY_ADMIN_URL=$CARRECTLY_ADMIN_URL >>.env'
                        sh 'echo CARRECTLY_ADMIN_URL_OLD=$CARRECTLY_ADMIN_URL_OLD >>.env'
                        sh 'echo NEXT_PUBLIC_GOOGLE_ADS=$NEXT_PUBLIC_GOOGLE_ADS >>.env'
                        sh 'echo NEXT_PUBLIC_GOOGLE_ANALYTICS=$NEXT_PUBLIC_GOOGLE_ANALYTICS >>.env'
                        sh 'echo NEXT_PUBLIC_FACEBOOK_PIXEL_ID=$NEXT_PUBLIC_FACEBOOK_PIXEL_ID >>.env'
                        sh 'echo NEXT_PUBLIC_GTM_ID=$NEXT_PUBLIC_GTM_ID >>.env'
                        sh 'echo NEXT_PUBLIC_MICROSOFT_PAGEVIEW_TAG_ID=$NEXT_PUBLIC_MICROSOFT_PAGEVIEW_TAG_ID >>.env'
                        sh 'echo NEXT_PUBLIC_MICROSOFT_CONFIRMATION_PAGEVIEW_TAG_ID=$NEXT_PUBLIC_MICROSOFT_CONFIRMATION_PAGEVIEW_TAG_ID >>.env'
                        dockerImage=docker.build registry
                      }
                    }
                 }
                 stage('push image to hub') {
                 steps {
                     script{
                          docker.withRegistry( '', registryCredential ) {
                          dockerImage.push("${env.BUILD_NUMBER}")
                          }
                        }
                    }
                }
                stage('Remove older images') {
                 steps {
                         sh 'docker rmi $(docker images -q)'
                        }
                }
                stage('Set image by k8s') {
                    steps {
                        sh "sed -i.bak 's|<imageTag>|${registry}|' ./frontend-carrectly.yaml"
                    }
                }
                stage('Deploy to GKE') { 
                 steps { 
                    step([
                    $class: 'KubernetesEngineBuilder',
                    projectId: env.PROJECT_ID,
                    clusterName: env.CLUSTER_NAME,
                    location: env.LOCATION,
                    manifestPattern: 'frontend-carrectly.yaml',
                    credentialsId: env.CREDENTIALS_ID,
                    verifyDeployments: true])
                    }
                }
                stage('Clear cache') {
                    steps {
                        script {
                            sh "curl -X POST -H 'X-Auth-Key: kXi-d4mDjGpTiafhJt8xYf78EbQlVtjjF2wz6cUx' -H 'X-Auth-Email: Taras@carrectly.com'  -H \'type: application/json\' -d'{\"purge_everything\" :true}' 'https://api.cloudflare.com/client/v4/zones/7788351225ff0290334491b49d064a7b/purge_cache'"
                        }
                    }
                }
            }
        }
    
